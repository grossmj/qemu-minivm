#!/bin/sh
# Store modules into qcow2

set -e
trap 'exit' INT QUIT TERM

die() {
	echo "$@" >&2
	exit 1
}

version=$1
size=${2:-200}

[ -n "$version" ] || die "Usage: modules2qcow2 version [size]"
[ -d "lib/modules/$version" ] || die "Directory not found: lib/modules/$version"

tempdir=$(mktemp -d)
trap 'rm -rf "$tempdir"' EXIT

echo "Copying modules..."

# create missing modules.dep
[ -f "lib/modules/$version/modules.dep" ] || \
	PATH="$PATH:/usr/sbin:/sbin" depmod -a -b . "$version"

# create raw image
dd if=/dev/zero bs=1M count="$size" of="$tempdir/modules.raw" status=none
PATH="$PATH:/usr/sbin:/sbin" mke2fs -q -t ext4 "$tempdir/modules.raw"

# copy modules into raw image
mkdir "$tempdir/modules"
docker run --rm --privileged --volume "$tempdir:/tempdir" --volume "$PWD/lib:/tempdir/lib" alpine sh -c -e "
mount -o loop /tempdir/modules.raw /tempdir/modules
cp -a '/tempdir/lib/modules/$version' /tempdir/modules
rm -f '/tempdir/modules/$version/build' '/tempdir/modules/$version/source'
chown -R 0:0 /tempdir/modules/*
umount /tempdir/modules
"

# convert raw image to compressed qcow2
qemu-img convert -c -f raw -O qcow2 "$tempdir/modules.raw" "modules-$version.qcow2"
echo "Image 'modules-$version.qcow2' created"
