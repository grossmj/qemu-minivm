#!/bin/sh
# Convert docker image to qcow2

set -e
trap 'exit' INT QUIT TERM

die() {
	echo "$@" >&2
	exit 1
}

image=$1
size=${2:-200}
init=$(dirname -- "$0")/init/mininit

[ -n "$image" ] || die "Usage: docker2qcow2 image [size_MB]"
[ -f "$init" ] || die "Init program not found: $init"

# check image size
image_size=$(docker inspect --format '{{.Size}}' "$image")
image_size=$(((image_size*13/10/1024 + 512)/1024))
[ "$image_size" -le "$size" ] || die "size should be at least ${image_size} MB"

tempdir=$(mktemp -d)
trap 'rm -rf "$tempdir" 2> /dev/null' EXIT
tempdocker=$(basename "$tempdir" | tr "A-Z." "a-z-" | tr -c -d "a-z0-9-")

echo "Exporting docker image..."

# convert docker image to temporary image with squashed layers
printf 'FROM %s\nFROM scratch\nCOPY --from=0 / /\n' "$image" | docker build -t "$tempdocker" - > /dev/null

# save temporary image into tar file
docker save -o "$tempdir/docker.tar" "$tempdocker"
docker rmi "$tempdocker" > /dev/null

# create raw image
dd if=/dev/zero bs=1M count="$size" of="$tempdir/image.raw" status=none
PATH="$PATH:/usr/sbin:/sbin" mke2fs -q -t ext4 "$tempdir/image.raw"

# copy init
cp "$init" "$tempdir/init"

# extract tar file into raw ext4 image, add init program
mkdir "$tempdir/image"
docker run --rm --privileged --volume "$tempdir:/tempdir" alpine sh -c -e '
mount -o loop /tempdir/image.raw /tempdir/image
tarfile=$(tar tf /tempdir/docker.tar | grep "\\.tar\$")
tar xOf /tempdir/docker.tar "$tarfile" | tar x -C /tempdir/image
rm -f /tempdir/image/sbin/init
cp /tempdir/init /tempdir/image/sbin/init
umount /tempdir/image
'

# convert raw image to compressed qcow2
qemu-img convert -c -f raw -O qcow2 "$tempdir/image.raw" "$image.qcow2"
echo "Image '$image.qcow2' created"
